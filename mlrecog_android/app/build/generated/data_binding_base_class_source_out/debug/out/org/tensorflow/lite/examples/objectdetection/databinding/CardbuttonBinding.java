// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.R;

public final class CardbuttonBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final CardView cardButton;

  @NonNull
  public final TextView distance;

  @NonNull
  public final Button getdirection;

  @NonNull
  public final ImageView showimage;

  @NonNull
  public final TextView titlename;

  private CardbuttonBinding(@NonNull CardView rootView, @NonNull TextView address,
      @NonNull CardView cardButton, @NonNull TextView distance, @NonNull Button getdirection,
      @NonNull ImageView showimage, @NonNull TextView titlename) {
    this.rootView = rootView;
    this.address = address;
    this.cardButton = cardButton;
    this.distance = distance;
    this.getdirection = getdirection;
    this.showimage = showimage;
    this.titlename = titlename;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardbuttonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardbuttonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cardbutton, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardbuttonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      CardView cardButton = (CardView) rootView;

      id = R.id.distance;
      TextView distance = ViewBindings.findChildViewById(rootView, id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.getdirection;
      Button getdirection = ViewBindings.findChildViewById(rootView, id);
      if (getdirection == null) {
        break missingId;
      }

      id = R.id.showimage;
      ImageView showimage = ViewBindings.findChildViewById(rootView, id);
      if (showimage == null) {
        break missingId;
      }

      id = R.id.titlename;
      TextView titlename = ViewBindings.findChildViewById(rootView, id);
      if (titlename == null) {
        break missingId;
      }

      return new CardbuttonBinding((CardView) rootView, address, cardButton, distance, getdirection,
          showimage, titlename);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
